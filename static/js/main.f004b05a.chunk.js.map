{"version":3,"sources":["assets/cover/cover-image.jpg","assets/GitHub-Logos/GitHub_Logo_White.png","assets/LinkedIn-Logos/LI-Logo.png","utils/helpers.js","components/Nav/index.js","components/Footer/index.js","components/About/index.js","components/Project/index.js","components/Contact/index.js","components/Header/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","capitalizeFirstLetter","string","charAt","toUpperCase","slice","Nav","props","categories","setCurrentCategory","currentCategory","contactSelected","setContactSelected","useEffect","document","title","name","className","href","role","aria-label","onClick","target","map","category","key","Footer","src","githubLogo","style","width","height","alt","linkedinLogo","About","id","Project","class","ContactForm","useState","email","message","formState","setFormState","errorMessage","setErrorMessage","handleChange","e","isValid","test","String","toLowerCase","validateEmail","value","console","log","length","onSubmit","preventDefault","htmlFor","type","defaultValue","onBlur","rows","Header","coverImage","App","description","Contact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.f004b05a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cover-image.bf78f5ef.jpg\";","module.exports = __webpack_public_path__ + \"static/media/GitHub_Logo_White.064ace47.png\";","module.exports = __webpack_public_path__ + \"static/media/LI-Logo.c24cde28.png\";","export function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function validateEmail(email) {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}","import React, { useEffect } from 'react';\r\nimport { capitalizeFirstLetter } from \"../../utils/helpers\";\r\n\r\n\r\nfunction Nav(props) {\r\n\r\n  const {\r\n    categories = [],\r\n    setCurrentCategory,\r\n    currentCategory,\r\n    contactSelected,\r\n    setContactSelected\r\n} = props;\r\n\r\n  useEffect(() => {\r\n    document.title = capitalizeFirstLetter(currentCategory.name);\r\n  }, [currentCategory]);\r\n\r\n    return (\r\n        <header className=\"flex-row px-1\">\r\n              <h2>\r\n    <a href=\"/\">\r\n    <span role=\"img\" aria-label=\"camera\">\r\n            {\" \"}\r\n            üìÅ\r\n          </span>{\" \"} Israel Berlanga\r\n    </a>\r\n  </h2>\r\n  <nav>\r\n    <ul className=\"flex-row\">\r\n      <li className=\"mx-2\">\r\n      <a href=\"#about\" onClick={() => setContactSelected(false)}>\r\n          About me\r\n        </a>\r\n      </li>\r\n      <li className=\"mx-2\">\r\n      <a href=\"https://github.com/israel0688/professional-portfolio/blob/master/Resume/Resume.docx\" target=\"_blank\">\r\n        Resume\r\n        </a>\r\n      </li>\r\n      <li className={`mx-2 ${contactSelected && 'navActive'}`}>\r\n      <span onClick={() => setContactSelected(true)}>Contact</span>\r\n        </li>\r\n          {categories.map((category) => (\r\n            <li className={`mx-1 ${\r\n              currentCategory.name === category.name && !contactSelected && `navActive`\r\n                }`} key={category.name}>\r\n              <span\r\n                onClick={() => {\r\n                  setCurrentCategory(category)\r\n                  setContactSelected(false);\r\n                }}\r\n              >\r\n                {capitalizeFirstLetter(category.name)}\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n  </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Nav;\r\n\r\n","import React from 'react';\r\nimport githubLogo from \"../../assets/GitHub-Logos/GitHub_Logo_White.png\";\r\nimport linkedinLogo from \"../../assets/LinkedIn-Logos/LI-Logo.png\"\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"my-5\">\r\n            <a href=\"https://www.github.com/israel0688\" target=\"_blank\">\r\n            <img src={githubLogo} className=\"my-2\" style={{ width: \"5%\", height: \"5%\" }} alt=\"github\" />\r\n            </a>\r\n            <a href=\"https://www.linkedin.com/in/israel-berlanga-6734421a3\" target=\"_blank\">\r\n            <img src={linkedinLogo} className=\"my-2\" style={{ width: \"5%\", height: \"5%\" }} alt=\"github\" />\r\n            </a>\r\n        </footer>\r\n      );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Footer from \"../Footer\";\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n        <section className=\"my-5\">\r\n            <h1 id=\"about\">About Me!</h1>\r\n            <p>\r\n            Hello, my name is Israel! I'm currently working as a banker for Bank of America but I am looking to make a career change to coding. I'm currently living in Houston but am willing to relocate. When I'm not helping people with their financial needs I spend my time fine tunning my coding. Want more information? Please take a look at my porfolio!\r\n            </p>\r\n        </section>\r\n        <Footer></Footer>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport { capitalizeFirstLetter } from '../../utils/helpers';\r\n//import photo from \"../../assets/projectPics/workoutworkers.png\";\r\nimport Footer from \"../Footer\";\r\nimport \"./style.css\"\r\n\r\nfunction Project(props) {\r\n\r\n  const currentCategory = {\r\n        name: \"Projects\",\r\n        description:\r\n          \"Projects I have done through out the boot camp\",\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <h1>{capitalizeFirstLetter(currentCategory.name)}</h1>\r\n      <div class=\"flex-container\">\r\n\r\n<div className=\"flex-item3\">\r\n    <span><a href=\"https://israel0688.github.io/movie-ranker/\" target=\"_blank\">Flix-Facts/</a><a href=\"https://github.com/israel0688/movie-ranker\" target=\"_blank\">REPO</a></span>\r\n  </div>\r\n  <div className=\"flex-item4\">\r\n    <span><a href=\"https://murmuring-escarpment-27359.herokuapp.com/\" target=\"_blank\">Workout Workers/</a><a href=\"https://github.com/israel0688/workout-workers\" target=\"_blank\">REPO</a></span>\r\n  </div>  \r\n<div className=\"flex-item1\">\r\n  <span><a href=\"https://israel0688.github.io/run-buddy/\" target=\"_blank\">Run Buddy/</a><a href=\"https://github.com/israel0688/run-buddy\" target=\"_blank\">REPO</a></span>\r\n</div>\r\n<div className=\"flex-item2\">\r\n  <span><a href=\"https://stackstudy.herokuapp.com/#Your%20Cards/\" target=\"_blank\">StackStudy/</a><a href=\"https://github.com/israel0688/StackStudy\" target=\"_blank\">REPO</a></span>\r\n</div>\r\n</div>\r\n<div>\r\n<Footer></Footer>\r\n</div>\r\n    </section>\r\n  );\r\n}\r\nexport default Project;","import React, { useState } from 'react';\r\nimport { validateEmail } from '../../utils/helpers';\r\nimport Footer from \"../Footer\";\r\n\r\nfunction ContactForm() {\r\n\r\n    const [formState, setFormState] = useState({ name: '', email: '', message: '' });\r\n    const { name, email, message } = formState;\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    function handleChange(e) {\r\n\r\n        if (e.target.name === 'email') {\r\n            const isValid = validateEmail(e.target.value);\r\n            console.log(isValid);\r\n            // isValid conditional statement\r\n            if (!isValid) {\r\n                setErrorMessage('Your email is invalid.');\r\n            } else {\r\n                setErrorMessage('');\r\n            }\r\n        } else {\r\n            if (!e.target.value.length) {\r\n                setErrorMessage(`${e.target.name} is required.`);\r\n            } else {\r\n                setErrorMessage('');\r\n            }\r\n        }\r\n        if (!errorMessage) {\r\n        setFormState({...formState, [e.target.name]: e.target.value });\r\n        }\r\n    }\r\n\r\n      function handleSubmit(e) {\r\n        e.preventDefault();\r\n        console.log(formState);\r\n      }    \r\n\r\n    //JSX\r\n    return (\r\n        <section>\r\n            <h1>Contact me</h1>\r\n            <form id=\"contact-form\" onSubmit={handleSubmit}>\r\n                 [name input]\r\n                <div>\r\n                    <label htmlFor=\"name\">Name:</label>\r\n                    <input type=\"text\" defaultValue={name} onBlur={handleChange} name=\"name\" />\r\n                </div>\r\n                 [email input]\r\n                <div>\r\n                    <label htmlFor=\"email\">Email address:</label>\r\n                    <input type=\"email\"  defaultValue={email} name=\"email\" onBlur={handleChange} />\r\n                </div>\r\n                [message text area]\r\n                <div>\r\n                    <label htmlFor=\"message\">Message:</label>\r\n                    <textarea name=\"message\"  defaultValue={message} onBlur={handleChange} rows=\"5\" />\r\n                </div>\r\n                {errorMessage && (\r\n                    <div>\r\n                        <p className=\"error-text\">{errorMessage}</p>\r\n                    </div>\r\n                )}\r\n                <button type=\"submit\">Submit</button>   \r\n            </form>\r\n            <Footer></Footer>\r\n        </section>\r\n    )\r\n};\r\n    \r\n    export default ContactForm;","import React from 'react';\r\nimport coverImage from \"../../assets/cover/cover-image.jpg\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n        <section className=\"my-5\">\r\n            <img src={coverImage} className=\"my-2\" style={{ width: \"50%\", height: \"250px\" }} alt=\"cover\" />\r\n            <img src={coverImage} className=\"my-2\" style={{ width: \"50%\", height: \"250px\" }} alt=\"cover\" />\r\n        </section>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default Header;","import React, { useState } from 'react';\nimport Nav from \"./components/Nav\";\nimport About from \"./components/About\";\nimport Project from \"./components/Project\";\nimport ContactForm from \"./components/Contact\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n\n  const [contactSelected, setContactSelected] = useState(false);\n  const [categories] = useState([\n    {\n      name: \"Portfolio\",\n      description:\n        \"Projects I have done through out the boot camp\",\n    },\n  ]);\n\n  \n  const [currentCategory, setCurrentCategory] = useState(categories[0]);\n\n  return (\n    <div>\n      <Nav\n        categories={categories}\n        setCurrentCategory={setCurrentCategory}\n        currentCategory={currentCategory}\n        contactSelected={contactSelected}\n        setContactSelected={setContactSelected}\n      ></Nav>\n      <Header></Header>\n      <main>\n      {!contactSelected ? (\n       <>\n          <Project currentCategory={currentCategory}></Project>\n          <About></About>\n       </>\n    ) : (\n    <ContactForm></ContactForm>\n  )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}